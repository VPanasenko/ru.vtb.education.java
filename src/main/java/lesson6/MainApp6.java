package lesson6;

import java.util.*;
import java.util.function.Function;
import java.util.function.ToDoubleFunction;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class MainApp6 {
    private static List<String> words = new ArrayList<>(Arrays.asList(
            "Первый","том","Войны","и","мира","состоит","из","трех","частей","разделенных","на","мирные","и","военные","блоки","повествования","и","охватывает",
            "события","1805","года","Мирная","первая","часть","первого","тома","произведения","и","начальные","главы","третьей","части","описывают","общественную",
            "жизнь","в","Москве","Петербурге","Лысых","Горах","Во","второй","части","и","последних","главах","третьей","части","первого","тома","автор","изображает",
            "картины","войны","русско-австрийской","армии","с","Наполеоном","Центральными","эпизодами","военных","блоков","повествования","становятся","Шенграбенское",
            "сражение","и","битва","под","Аустерлицем",
            "С","первых","мирных","глав","романа","Война","и","мир","Толстой","знакомит","читателя","с","главными","героями","произведения","Андреем","Болконским",
            "Наташей","Ростовой","Пьером","Безуховым","Николаем","Ростовым","Соней","и","другими","Через","изображение","жизни","различных","социальных","групп",
            "и","семей","автор","передает","многообразие","русской","жизни","в","довоенное","время","Военные","главы","отображают","весь","неприукрашенный","реализм",
            "военных","действий","дополнительно","раскрывая","перед","читателем","характеры","основных","героев","Поражение","под","Аустерлицем","завершающее","первый",
            "том","предстает","в","романе","не","только","проигрышем","русских","войск","но","и","символом","краха","надежд","переворота","в","жизни","большинства","главных","персонажей"
    ));

    private static List<Employee> employees = new ArrayList<>(Arrays.asList(
            new Employee("V1", 30, 100000d),
            new Employee("V2", 41, 110000d),
            new Employee("V3", 32, 120000d),
            new Employee("V4", 33, 130000d),
            new Employee("V5", 34, 140000d),
            new Employee("V6", 35, 150000d),
            new Employee("V7", 36, 160000d),
            new Employee("V8", 37, 170000d),
            new Employee("V9", 38, 180000d),
            new Employee("V10", 39, 190000d)
    ));

    private static String someWords = "Первый том Войны и мира состоит из трех частей разделенных на мирные и военные блоки повествования и охватывает события 1805 года Мирная первая часть первого тома произведения и начальные главы третьей части описывают общественную жизнь в Москве Петербурге Лысых Горах \n" +
            "Во второй части и последних главах третьей части первого тома автор изображает картины войны русско-австрийской армии с Наполеоном Центральными эпизодами военных блоков повествования становятся Шенграбенское сражение и битва под Аустерлицем\n" +
            "С первых мирных глав романа Война и мир Толстой знакомит читателя с главными героями произведения Андреем Болконским Наташей Ростовой Пьером Безуховым Николаем Ростовым Соней и другими Через изображение жизни различных социальных групп и семей автор передает многообразие русской жизни в довоенное время Военные главы отображают весь неприукрашенный реализм военных действий дополнительно раскрывая перед читателем характеры основных героев Поражение под Аустерлицем завершающее первый том предстает в романе не только проигрышем русских войск но и символом краха надежд переворота в жизни большинства главных персонажей";

    public static void main(String[] args) {
        System.out.println("Задача 1");
        System.out.println("==============================================================================");
        Task1();
        System.out.println("==============================================================================");
        System.out.println("Задача 2");
        System.out.println("==============================================================================");
        Task2();
        System.out.println("==============================================================================");
        System.out.println("Задача 3");
        System.out.println("==============================================================================");
        Task3(3);
        System.out.println("==============================================================================");
        System.out.println("Задача 4");
        System.out.println("==============================================================================");
        Task4();
        System.out.println("==============================================================================");
        System.out.println("Задача 5");
        System.out.println("==============================================================================");
        Task5();
        System.out.println("==============================================================================");
        System.out.println("Задача 6");
        System.out.println("==============================================================================");
        Task6();
        System.out.println("==============================================================================");
        System.out.println("Задача 7");
        System.out.println("==============================================================================");
        Task7();
        System.out.println("==============================================================================");
    }

    private static void Task1(){
        System.out.println((words.stream().map(w->w.toLowerCase()).collect(Collectors.groupingBy(s->s, Collectors.counting())))
                .entrySet().stream().sorted(Collections.reverseOrder(Map.Entry.comparingByValue())).findFirst().map(Object::toString).orElse(""));
    }

    private static void Task2() {
        OptionalDouble avg = employees.stream().mapToDouble((ToDoubleFunction<? super Employee>) e -> e.getSalary()).average();
        System.out.println("Средняя зарплата составлет " + avg.getAsDouble() + " чего-то там.");
    }

    private static void Task3(int employeesToShow) throws IllegalArgumentException {
        long eCount = employees.stream().count();
        if (employeesToShow < 0 || employeesToShow > eCount){
            throw new IllegalArgumentException("Некорректное число сотрудников для отображения - задано "+employeesToShow+", но минимум 0, а максимум " + eCount);
        }
        System.out.println(employees.stream().sorted((e1, e2)-> e2.getAge() - e1.getAge())
                .limit(employeesToShow).map(e->e.getName()).collect(Collectors.joining(", ", employeesToShow + " самых старших сотрудников зовут: ", "."))
        );
    }

    private static void Task4() {
        System.out.println(
                Arrays.stream(someWords.split(" ")).filter(str -> str.length() >= 5).collect(Collectors.joining(" ", "", ""))
        );
    }

    private static void Task5() {
        System.out.println("Сумма четных чисел от 100 до 200 равна " + IntStream.rangeClosed(100, 200).filter(v -> v % 2 == 0).reduce(0, (result, value)-> result += value));
    }

    private static void Task6() {
        System.out.println("Суммарная длина строк в массиве 'words' составляет " +
                words.stream().map(str->str.length()).reduce(0, (result, strLength) ->
                        result += strLength
                ));
    }

    private static void Task7() {
        System.out.println("Первые 3 слова в алфавитном порядке: " + words.stream().limit(3).sorted().collect(Collectors.joining(", ")));
    }
}
